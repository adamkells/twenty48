#!/usr/bin/env ruby
# frozen_string_literal: true

#
# Sort the binary records generated by the layer_build step. This approach is
# based on http://serverfault.com/questions/402920/sorting-large-binary-files
#
# Usage example:
# bin/layer_sort data/layer_states/board_size-3.*/*.bin
#

require 'tmpdir'
require 'fileutils'

RECORD_SIZE = 8

ARGV.each do |input_file|
  input_size = File.stat(input_file).size
  puts "Sorting #{input_file} (#{input_size}B)"
  Dir.mktmpdir do |tmp|
    output_file = File.join(tmp, 'output.bin')
    system <<-CMD
    cat #{input_file} \
        | xxd -cols #{RECORD_SIZE} -plain \
        | sort \
        | xxd -cols #{RECORD_SIZE} -plain -revert \
        > #{output_file}
    CMD
    output_size = File.stat(output_file).size

    raise "size mismatch: #{input_size} != #{output_size}" \
      if input_size != output_size

    FileUtils.mv output_file, input_file
  end
end
