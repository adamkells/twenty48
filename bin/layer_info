#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

require_relative '../lib/twenty48'

include Twenty48

DATA_FOLDER = ARGV.first
raise 'bad data folder' unless DATA_FOLDER && File.directory?(DATA_FOLDER)

total_states = 1 # count the empty state
Dir.glob(File.join(DATA_FOLDER, '*')).sort.each do |input_file|
  set = StateHashSet2.new(1024)
  set.load_binary(input_file)
  puts "***** LAYER #{input_file}: #{set.size}"
  total_states += set.size - 1 # don't count the empty state
  # set.to_a.sort.each do |state|
  #  puts state.pretty_print
  #  puts
  # end
end

puts format('total states: %d', total_states)
