#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

require_relative '../lib/twenty48'

include Twenty48

def build(board_size:, max_exponent:, max_depth:, max_states:)
  # Note: exact discount value doesn't matter for build step.
  discount = 0.95

  states_path = Storage.layer_states_pathname(
    board_size: board_size,
    max_exponent: max_exponent,
    max_depth: max_depth
  )
  if Dir.exist?(states_path)
    puts 'exists; skipping'
    return
  end
  FileUtils.mkdir_p states_path

  valuer = NativeValuer.create(
    board_size: board_size,
    max_exponent: max_exponent,
    max_depth: max_depth,
    discount: discount
  )
  layer_builder = NativeLayerBuilder.create(board_size, states_path, valuer)
  layer_builder.build(max_states) do |layer_pathname, num_states|
    puts format('%s: %d states', layer_pathname, num_states)
  end

  layer_builder.sort_all_layers do |layer_pathname|
    puts "Sorting #{layer_pathname}"
  end
end

#
# 2x2
#
(3..7).each do |max_exponent|
  (0..[3, max_exponent - 1].min).each do |max_depth|
    build(
      board_size: 2,
      max_exponent: max_exponent,
      max_depth: max_depth,
      max_states: 1024
    )
  end
end

# build(
#   board_size: 3,
#   max_exponent: 11,
#   max_lose_depth: 0,
#   max_win_depth: 0,
#   max_states: 60 * 1024**2
# )

# build(
#   board_size: 4,
#   max_exponent: 11,
#   max_lose_depth: 0,
#   max_win_depth: 0,
#   max_states: 1.3e9.to_i
# )
