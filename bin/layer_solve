#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

require_relative '../lib/twenty48'
include Twenty48

states_path = ARGV.first
raise 'specify path to state layers' unless states_path
raise "bad states path: #{states_path}" unless File.directory?(states_path)

params = Storage.layer_params_from_pathname(states_path)
params[:discount] = 0.95

values_path = File.join(
  Storage::LAYER_VALUES_PATH, Storage.build_basename(params)
)
FileUtils.mkdir_p values_path

layer_files = Dir.glob(File.join(states_path, '*.bin'))
layer_sums = layer_files.map do |pathname|
  File.basename(pathname, '.bin').to_i
end

valuer = NativeValuer.create(
  board_size: params[:board_size],
  max_exponent: params[:max_exponent],
  max_depth: params[:max_depth],
  discount: params[:discount]
)

solver = NativeLayerSolver.create(
  params[:board_size],
  states_path,
  values_path,
  layer_sums.max,
  valuer
)

loop do
  puts "Solving layer #{solver.get_sum}"
  solver.solve
  break unless solver.move_to_lower_layer
end
