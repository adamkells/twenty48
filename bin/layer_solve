#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

require_relative '../lib/twenty48'

DISCOUNT = 1.0
ALTERNATE_ACTION_TOLERANCE = -1.0

#
# Solve layer models from layer_build.
#
class LayerSolveBin
  include Twenty48

  def solve(layer_model)
    solver = LayerSolver.new(layer_model,
      discount: DISCOUNT,
      alternate_action_tolerance: ALTERNATE_ACTION_TOLERANCE,
      verbose: true)
    solver.solve
  end

  def run
    data = Data.new(root: Data::ROOT)
    data.game.each do |game|
      game.layer_model.each do |layer_model|
        solution = layer_model.part.first&.solution&.find_by(
          discount: DISCOUNT,
          alternate_action_tolerance: ALTERNATE_ACTION_TOLERANCE
        )
        if solution
          puts 'exists'
          next
        end
        solve(layer_model)
      end
    end
  end
end

LayerSolveBin.new.run
