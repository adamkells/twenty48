#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/twenty_48'

puts %w(
  board_size max_exponent max_resolve_depth start_states states bz2_size
  mean_start_state_value
).join(',')

Dir.glob(Twenty48::Storage::SOLVERS_GLOB).sort.each do |solver_pathname|
  solver_params = Twenty48::Storage.solver_params_from_pathname(solver_pathname)
  builder = Twenty48::Storage.new_builder_from_model_params(solver_params)
  solver = Twenty48::Storage.read_solver(solver_params)

  value = solver.value
  start_states = builder.start_states
  mean_start_state_value = start_states
    .map { |state| value[builder.resolve(state)] }
    .inject(&:+) / start_states.size

  puts [
    builder.board_size,
    builder.max_exponent,
    builder.max_resolve_depth,
    value.size,
    File.stat(Twenty48::Storage.model_pathname(solver_params)).size,
    mean_start_state_value
  ].join(',')
end

# out of time / memory: at least 1446235 states
# tabulate(Twenty48::Builder.new(4, 4, true))
