#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/twenty_48'

discount = 0.95
tolerance = 1e-4

# For a single file:
# input_stem = 'data/...'
# input_file = "#{input_stem}.json.bz2"
# model_params = { board_size: 4, max_exponent: 4, max_resolve_depth: 3 }
# model = Twenty48::Storage.read_model_file(input_file)

Dir.glob(Twenty48::Storage::MODELS_GLOB).sort.each do |input_file|
  model_params = Twenty48::Storage.model_params_from_pathname(input_file)
  p model_params
  model = Twenty48::Storage.read_model(model_params)
  model.check_transition_probabilities_sum

  solver = FiniteMDP::Solver.new(model, discount)
  solver.policy_iteration tolerance

  solver_params = Twenty48::Storage.solver_params(
    model_params, discount, tolerance
  )
  output_file = Twenty48::Storage.solver_pathname(solver_params, '.csv')
  CSV.open(output_file, 'w') do |csv|
    csv << %w(state action value)
    policy = solver.policy
    value = solver.value
    policy.keys.sort.each do |state|
      csv << [state, policy[state], value[state]]
    end
  end
  system "bzip2 --force #{output_file}"
end
