#!/usr/bin/env ruby
# frozen_string_literal: true

require 'finite_mdp'

require_relative '../lib/twenty_48'

board_size = 3
max_exponent = 3
discount = 0.95
tolerance = 1e-4
use_pre_winning_state = true

builder = Twenty48::Model.new(board_size, max_exponent, use_pre_winning_state)
hash = builder.build_hash_model
builder.add_rewards_to_hash hash

model = FiniteMDP::HashModel.new(hash)

solver = FiniteMDP::Solver.new(model, discount)
solver.policy_iteration tolerance

solver.policy.keys.sort.each do |state|
  state_value = format("#{solver.policy[state]} (%.2f)", solver.value[state])
  puts "#{state.pretty_print} => #{state_value}"
  puts
end
