#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/twenty48'

#
# Convert hash models to more efficient array models.
#
class ArrayBin
  include Twenty48
  include ArrayModelBuilder

  def build(model)
    array_model = build_array_model(model.hash_json_bz2)
    puts 'built'
    array_model.check_transition_probabilities_sum
    puts 'checked'

    if array_model.num_states < 50_000
      puts 'checking'
      # Sanity check: load the model in the usual, more memory-intensive way.
      full_model = model.hash_json_bz2.read
      full_array_model = FiniteMDP::ArrayModel.from_model(full_model)
      raise 'array mismatch' unless array_model.array == full_array_model.array
      raise 'map mismatch' unless array_model.state_action_map.map ==
          full_array_model.state_action_map.map
    end

    model.array_bin.write(array_model)
    system "bzip2 --force #{model.array_bin}"
  end

  def run
    data = Data.new(root: Data::ROOT)
    data.game.each do |game|
      game.model.each do |model|
        next unless model.hash_json_bz2.exist?
        if model.array_bin_bz2.exist?
          puts 'exists'
          next
        end
        build(model)
      end
    end
  end
end

ArrayBin.new.run
