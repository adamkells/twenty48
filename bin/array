#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/twenty48'

include Twenty48

Dir.glob(Storage::MODELS_GLOB).sort.each do |input_file|
  model_params = Storage.model_params_from_pathname(input_file)
  p model_params

  output_file = Twenty48::Storage.array_model_pathname(model_params, '.bin')
  if File.exist?("#{output_file}.bz2")
    puts 'exists'
    next
  end

  array_model = Storage.build_array_model(model_params)
  puts 'built'
  array_model.check_transition_probabilities_sum
  puts 'checked'

  if array_model.num_states < 50_000
    puts 'checking'
    # Sanity check: load the model in the usual, more memory-intensive way.
    full_model = Storage.read_model(model_params)
    full_array_model = FiniteMDP::ArrayModel.from_model(full_model)
    raise 'array mismatch' unless array_model.array == full_array_model.array
    raise 'map mismatch' unless
      array_model.state_action_map.map == full_array_model.state_action_map.map
  end

  File.open(output_file, 'wb') do |file|
    Marshal.dump array_model, file
  end
  system "bzip2 --force #{output_file}"
end
