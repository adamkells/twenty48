#!/usr/bin/env ruby
# frozen_string_literal: true

require 'fileutils'

require_relative '../lib/twenty48'

include Twenty48

STATES_FOLDER = 'data/states'
FileUtils.mkdir_p STATES_FOLDER

puts %w[board_size max_exponent max_lose_depth max_win_depth states].join(',')

def run(board_size, max_exponent, max_lose_depth, max_win_depth, max_states:)
  GC.start
  params = {
    board_size: board_size,
    max_exponent: max_exponent,
    max_lose_depth: max_lose_depth,
    max_win_depth: max_win_depth
  }
  builder = NativeBuilder.create(*params.values, max_states: max_states)
  builder.build
  puts((params.values + [builder.count_closed_states]).join(','))
  STDOUT.flush

  dump_filename = "#{Storage.build_basename(params)}.txt"
  builder.dump File.join(STATES_FOLDER, dump_filename)
end

#
# 2x2
#
(2..7).each do |max_exponent|
  [0, 1, 2].each do |max_lose_depth|
    [0, 1, 2].each do |max_win_depth|
      run(2, max_exponent, max_lose_depth, max_win_depth, max_states: 1024)
    end
  end
end

# #
# # 3x3
# #
# (2..12).each do |max_exponent|
#   [0, 1, 2].each do |max_lose_depth|
#     [0, 1, 2].each do |max_win_depth|
#       run(3, max_exponent, max_lose_depth, max_win_depth,
#         max_states: 60_000_000)
#     end
#   end
# end
#
# #
# # 4x4
# #
# (2..5).each do |max_exponent|
#   [2, 1, 0].each do |max_lose_depth|
#     [2, 1, 0].each do |max_win_depth|
#       run(4, max_exponent, max_lose_depth, max_win_depth,
#         max_states: 1e9.to_i)
#     end
#   end
# end
