#!/usr/bin/env ruby
# frozen_string_literal: true

require_relative '../lib/twenty48'

THRESHOLDS = [0.0, 1e-3, 1e-6].freeze

#
# Run the LayerTrancheBuilder.
#
class LayerTrancheBin
  include Twenty48

  def run
    data = Data.new(root: Data::ROOT)
    data.game.each do |game|
      game.layer_model.each do |layer_model|
        puts layer_model
        solutions = layer_model.part.first&.solution&.all || []
        solutions.each do |solution|
          solution_attributes = solution.to_h
          p solution_attributes
          THRESHOLDS.each do |threshold|
            tranche = solution.tranche.find_by(threshold: threshold)
            if tranche
              puts 'exists'
              next
            end
            tranche_builder = LayerTrancheBuilder.new(
              layer_model, solution_attributes, threshold
            )
            tranche_builder.build
          end
        end
      end
    end
  end
end

LayerTrancheBin.new.run
